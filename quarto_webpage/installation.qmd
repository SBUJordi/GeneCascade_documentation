---
title: "Installation"
---

## System requirements

-   Linux OS (e.g., CentOS, Ubuntu, Debian, etc.)

-   \~ 590GB disk space software and reference databases

-   For optimal performance, we recommend running StrainCascade with 32 CPU cores, with 3GB of RAM allocated per core (= total of 96GB of RAM). If you run SC15 for de novo tree generation more than 100GB of RAM might be required.

## Installation dependencies

-   [Git](https://git-scm.com/)

-   [Apptainer](https://apptainer.org/)

-   ([Bash](https://tiswww.case.edu/php/chet/bash/bashtop.html) as command-line shell)

-   (Optional: [Conda/Miniconda](https://docs.anaconda.com/miniconda/))

-   All further software dependencies (listed in detail under [Dependencies](dependencies.qmd)) are bundled in Apptainer images, which are automatically downloaded and used when installing/running StrainCascade. This approach enhances:

    1.  Ease of use: Simplified installation and execution process

    2.  Portability: Consistent performance across different computing environments

    3.  Reproducibility: Ensures identical software environments for all users

    4.  Version control: Precise management of software versions and their interactions

    5.  Isolation: Minimises conflicts with existing system libraries

## Default installation (interactive)

For standard installation with the command-line interface, follow these steps:

Optional - Create and activate a conda environment for StrainCascade:

``` bash
conda create -n StrainCascade_env
conda activate StrainCascade_env
```

Optional - Navigate to your StrainCascade conda environment directory:

``` bash
cd $CONDA_PREFIX
```

Clone the StrainCascade GitHub repository to your current working directory

``` bash
git clone https://github.com/SBUJordi/StrainCascade.git
```

Navigate to the new StrainCascade directory

``` bash
cd StrainCascade
```

Make all scripts (including the ones in subdirectories) of StrainCascade executable

``` bash
find scripts/ -type f -exec chmod +x {} \;
```

Execute the installation script, which pulls Apptainer images and downloads databases. At this point you have three insttallation options:

``` bash
# For interactive installation with normal verbosity (recommended default)
./scripts/StrainCascade_installation.sh
```

``` bash
# For quiet full installation
STRAINCASCADE_VERBOSITY=0 ./scripts/StrainCascade_installation.sh --full
```

``` bash
# For verbose interactive installation
STRAINCASCADE_VERBOSITY=2 ./scripts/StrainCascade_installation.sh
```

If you choose the default interactive installation, you will be prompted by an interactive installation guide if you have enough disk space.

```         
Running StrainCascade installation...
Sufficient disk space available: XXXGB
Apptainer is installed.
Do you want to do a full installation of StrainCascade? (y/n)
```

For a complete installation from scratch, choose `y` when asked.

The installation may take between 12 hours to over a day, depending on your system and network speed.

## Custom installation

In the event of an error, disruption, or if you prefer to install only specific Apptainer images or databases, you can choose `n` when prompted for a full installation. This will allow you to sequentially decide for each individual Apptainer image or database whether you want to download and install it.

This option is particularly useful in scenarios where:

-   You have limited disk space or bandwidth and need to prioritize specific components.

-   You encountered an error during a previous installation attempt and need to retry specific parts of the installation.

-   You are troubleshooting and want to isolate certain components for testing.

When opting for a selective installation, the script will guide you through each component, providing a brief description and asking whether you wish to install it. This process ensures that only the necessary components are downloaded, giving you full control over the installation.

Example Prompt:

``` console
Do you want to install checkm2_db? (y/n)
```

By answering `y` or `n` to each prompt, you can customise the installation to your specific needs.

## Updating your existing StrainCascade installation

StrainCascade provides separate update mechanisms for its three main components: software scripts, Apptainer images, and databases. You can update each component independently using specific command-line flags with the straincascade command.

To update the software scripts, use:

``` bash
straincascade -us
```

To update the Apptainer images, use:

``` bash
straincascade -uai
```

To update the databases, use:

``` bash
straincascade -udb
```

These update options are particularly useful when you want to incorporate improvements, bug fixes, or new releases specific to each component without performing a complete reinstallation. For example, you might want to update just the databases when new reference data becomes available, or update the software scripts to access the latest features while keeping your existing images and databases.

**Important Note:** These individual update mechanisms are designed for minor version updates and patches. They do not replace the need for a complete reinstallation when major version releases introduce significant new features that affect multiple components of StrainCascade. In such cases, please refer to the full installation instructions for your specific version.

## CAVEATS

-   **PATH configuration for multiple installations:** The installation process updates your `PATH` variable by modifying shell configuration files and/or the conda environment. StrainCascade generally supports multiple installations across different conda environments. If you experience issues, verify that your `$PATH` points to the correct StrainCascade installation.

-   **Installation of third-party databases:** StrainCascade downloads and installs several third-party databases during the installation process. These databases are essential for StrainCascade to function correctly. During development and testing installations of larger databases (e.g. GTDB-Tk or [ARMFinderPlus for Bakta](https://github.com/oschwengers/bakta/issues/268)) have caused issues at times. Most often these problems were due to network connectivity, server or local SLURM issues and would relove on its own. We recommend to try the installation again after a few hours or days.

-   **Managing Apptainer images after updates:** When re-installing Apptainer images after a StrainCascade update, newer versions (indicated by a higher :v#) of a former image may be downloaded. Although older versions are typically removed (e.g., when using `straincascade -uai`), there may be cases where previous Apptainer images remain. In such cases, StrainCascade will prioritize the first matching image, which may not always be the latest version. While this usually doesn't cause errors, we recommend to check the `apptainer_images` directory and remove outdated versions after re-installations. You can find the `apptainer_images` directory in the StrainCascade installation directory. You can easily navigate to the `apptainer_images` directory with the following command (activate the conda environment first if necessary):

    ``` bash
    cd $(dirname $(which straincascade))/../apptainer_images
    ```