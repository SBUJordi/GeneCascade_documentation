[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "",
    "section": "",
    "text": "StrainCascade Logo"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "installation.html",
    "href": "installation.html",
    "title": "Installation",
    "section": "",
    "text": "Linux OS (e.g., CentOS, Ubuntu, Debian, etc.)\nDisk space: Approximately ~475GB is required for GeneCascade, which includes the Apptainer image and all reference databases (UniProtKB/Swiss-Prot, UniProtKB/TrEMBL, GTDB). Please ensure adequate space before starting. The Apptainer image itself requires about 2GB.\nFor optimal performance, a system with 32 CPU cores and 5GB of RAM per core (total 160GB RAM) is recommended. The number of CPU cores can be freely adjusted but we recommend strongly to always assign 5GB or more of RAM per core."
  },
  {
    "objectID": "overview.html",
    "href": "overview.html",
    "title": "StrainCascade",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n\nCode\n1 + 1\n\n\n[1] 2"
  },
  {
    "objectID": "installation.html#dependencies",
    "href": "installation.html#dependencies",
    "title": "Installation",
    "section": "",
    "text": "git\nApptainer"
  },
  {
    "objectID": "installation.html#installation",
    "href": "installation.html#installation",
    "title": "Installation",
    "section": "3 Installation",
    "text": "3 Installation\nClone the StrainCascade GitHub repository\ngit clone https://github.com/SBUJordi/StrainCascade.git\nMove to the StrainCascade directory\ncd StrainCascade\nMake the StrainCascade scripts executable\nchmod +x scripts/*\nExecute the installation script (pulls Apptainer images and downloads databases)\n./scripts/StrainCascade_installation.sh"
  },
  {
    "objectID": "installation.html#system-requirements",
    "href": "installation.html#system-requirements",
    "title": "Installation",
    "section": "",
    "text": "Linux OS (e.g., CentOS, Ubuntu, Debian, etc.)\nDisk space: Approximately ~475GB is required for GeneCascade, which includes the Apptainer image and all reference databases (UniProtKB/Swiss-Prot, UniProtKB/TrEMBL, GTDB). Please ensure adequate space before starting. The Apptainer image itself requires about 2GB.\nFor optimal performance, a system with 32 CPU cores and 5GB of RAM per core (total 160GB RAM) is recommended. The number of CPU cores can be freely adjusted but we recommend strongly to always assign 5GB or more of RAM per core."
  },
  {
    "objectID": "installation.html#installation-dependencies",
    "href": "installation.html#installation-dependencies",
    "title": "Installation",
    "section": "2 Installation dependencies",
    "text": "2 Installation dependencies\n\nGit\nApptainer (formerly Singularity): The installation script will check if Apptainer is installed and in your PATH. If not, you will be prompted to install it (see Apptainer Installation Guide).\n(Bash as command-line shell)\n(Optional: Conda/Miniconda for environment management)\nAll further software dependencies (like MMseqs2) are bundled within the GeneCascade Apptainer image (sbujordi/genecascade_mmseqs2_r:latest from Docker Hub, saved as genecascade_mmseqs2_r_latest.sif), which is automatically downloaded during installation. This approach enhances:\n\nEase of use: Simplified installation and execution.\nPortability: Consistent performance across different computing environments.\nReproducibility: Ensures identical software environments.\nVersion control: Precise management of software versions.\nIsolation: Minimizes conflicts with existing system libraries."
  },
  {
    "objectID": "installation.html#installation-steps",
    "href": "installation.html#installation-steps",
    "title": "Installation",
    "section": "3 Installation steps",
    "text": "3 Installation steps\nClone the StrainCascade GitHub repository\ngit clone https://github.com/SBUJordi/StrainCascade.git\nMove to the StrainCascade directory\ncd StrainCascade\nMake the StrainCascade scripts executable\nchmod +x scripts/*\nExecute the installation script (pulls Apptainer images and downloads databases)\n./scripts/StrainCascade_installation.sh\nYou will be prompted by an interactive installation guide if you have enough disk space.\nRunning StrainCascade installation...\nSufficient disk space available: XXXGB\nApptainer is installed.\nDo you want to do a full installation of StrainCascade? (y/n)\nFor a complete installation from scratch, choose y when asked:\ny\nThe installation process will take a while."
  },
  {
    "objectID": "usage.html",
    "href": "usage.html",
    "title": "Usage",
    "section": "",
    "text": "GeneCascade v1.0.0: Modular pipeline for sequence analysis.\n\nUsage: genecascade &lt;command&gt; [OPTIONS]\n\n  Commands:\n    run                       Run the GeneCascade analysis pipeline.\n    install                   Install/Update GeneCascade Apptainer image and databases.\n\n  Required Arguments for 'run':\n    -i, --input_sequences   Path to input sequence data (FASTA, directory, CSV, TSV, QS, RData)\n    -o, --output_dir_base   Base directory for all run outputs\n\n  Optional Core Input/Output & Context Parameters for 'run':\n    -m, --metadata_file     Path to metadata file (TSV or QS). Auto-generated if not provided.\n    --genome_id_column      Metadata column for genome/MAG IDs (used in GC 6 context)\n    --sample_id_column      Metadata column for sample IDs (used in GC 6 context)\n    --condition_column      Metadata column for condition/niche IDs (used in GC 6 context)\n    --fdr_threshold         Global False Discovery Rate threshold (default: 0.05)\n    --apptainer_images_dir Path to Apptainer images (default: GeneCascade_root/apptainer_images)\n    --databases_directory Path to databases (default: GeneCascade_root/databases)\n    -f, --force_overwrite   Force overwrite of existing output directories for active analyses\n\n  Optional Performance Parameters for 'run':\n    -t, --threads           Number of threads (default: 16)\n    --memory                Memory limit for MMseqs2 (e.g., 10G, 0 for unlimited) (default: \"0\")\n    --future_globals_max_size_gb Max size for R future globals (GB) (default: 5)\n\n  Optional Skip Flags for 'run':\n    --skip_GC_01_preparation Skip GC 1 (Input Preparation)\n    --skip_GC_02_annotation  Skip GC 2 (Sequence Annotation)\n    --skip_GC_03_clustering  Skip GC 3 (Homology Clustering)\n    --skip_GC_04_master_table Skip GC 4 (Master Table Generation)\n    --skip_GC_05_core_features Skip GC 5 (Core Feature Analysis)\n    --skip_GC_06_cooccurrence Skip GC 6 (Co-occurrence Analysis)\n    --skip_GC_07_association  Skip GC 7 (Association Studies)\n\n  Optional General Abundance Parameters for 'run':\n    --abundance_type        Feature interpretation: 'binary', 'relative_abundance', 'absolute_abundance' (default: \"binary\")\n    --abundance_column      Metadata column for abundance values if not 'binary'.\n\n  Optional Parameters for GC 1 (Sequence Preparation) for 'run':\n    --sequence_type         Initial sequence type: 'protein' or 'nucleotide' (default: auto-detect in M1)\n\n  Optional Parameters for GC 2 (Annotation) for 'run':\n    --annotation_db_priority Annotation DB priority (e.g., \"Swiss-Prot,TrEMBL\") (default: \"Swiss-Prot_TrEMBL\")\n    -s, --sensitivity       Sensitivity for MMseqs2 (GC 02 & 03) (default: 5.7)\n\n  Optional Parameters for GC 3 (Clustering) for 'run':\n    --min_sequence_identity Min sequence identity for clustering (MMseqs2 --min-seq-id) (default: 0.5)\n    --min_coverage          Min coverage for clustering (MMseqs2 -c or --min-cov) (default: 0.8)\n    --coverage_mode         Coverage mode for clustering (MMseqs2 --cov-mode) (default: 0)\n\n  Optional Parameters for GC 4 (Master Table Generation) for 'run':\n    --master_table_basename Basename for master data table (default: \"master_data_table\")\n\n  Optional Parameters for GC 5 (Core Feature Analysis) for 'run':\n    --core_feature_prevalence_threshold Prevalence threshold for core features (default: 0.9)\n\n  Optional Parameters for GC 6 (Co-occurrence Analysis) for 'run':\n    (Context for GC 6 is set by --genome_id_column, --sample_id_column, --condition_column listed above)\n    (Homologue Group Filters & Pairwise Tests):\n      --cooc_correlation_method Correlation method for abundance: 'spearman' or 'pearson' (default: \"spearman\")\n      --min_hg_occurrence_absolute Min absolute HG presence (default: 10)\n      --min_hg_occurrence_fraction Min fractional HG presence (0.0-1.0, default: 0.01)\n      --max_hg_prevalence_percentage Max HG prevalence percentage (0-100, default: 99.0)\n      --min_pair_cooccurrence_absolute Min absolute pair co-occurrence (default: 5)\n      --min_pair_cooccurrence_fraction Min fractional pair co-occurrence (0.0-1.0, default: 0.005)\n      --min_hg_iqr_abundance    Min IQR for abundance modes (default: 0.0)\n      --min_correlation_metric  Min absolute pairwise correlation metric (default: 0.0)\n      --pairwise_test_chunk_size Pair processing chunk size for R helper (default: 1000000)\n    (Module Definition):\n      --min_positive_module_correlation Min positive correlation for module definition (default: 0.3)\n      --min_module_size         Min HGs for a module (default: 3)\n      --community_detection_method Community detection algorithm (e.g., 'cluster_louvain') (default: \"cluster_louvain\")\n      --core_module_strong_link_threshold Metric for strong links in core modules (default: 0.7)\n    (Competitive Pathway Analysis):\n      --inter_pathway_neg_metric_threshold Negative metric threshold for inter-pathway competition (default: -0.2)\n      --inter_pathway_min_neg_links Min negative links for inter-pathway competition (default: 1)\n      --vs_core_neg_metric_threshold Negative metric threshold for pathway vs. core competition (default: -0.3)\n      --vs_core_min_frac_members Min fraction members for pathway vs. core competition (default: 0.25)\n      --vs_core_min_distinct_core_hgs Min distinct core HGs competed with (default: 1)\n\n  Optional Parameters for GC 7 (Association Studies - MaAsLin3) for 'run':\n    --maaslin_fixed_effects     Comma-separated fixed effects (metadata columns) [REQUIRED for M7]\n    --maaslin_random_effects    Comma-separated random effects (metadata columns)\n    --maaslin_reference_levels  Semicolon-separated 'variable,ref_level;var2,ref2' for MaAsLin3.\n    --maaslin_observation_unit_column Metadata column for sample IDs (primary grouping) [REQUIRED for M7]\n    --maaslin_genome_id_column  Optional metadata column for genome IDs (e.g., for random effect).\n    --maaslin_analysis_target   Feature type: 'homologues' or 'pathways' (default: \"homologues\")\n    --maaslin_normalization     Normalization for MaAsLin3 (default: \"TSS\" for quantitative, \"NONE\" for binary)\n    --maaslin_transform         Transformation for MaAsLin3 (default: \"LOG\" for quantitative, \"NONE\" for binary)\n    --maaslin_standardize       Standardize continuous metadata ('TRUE' or 'FALSE') (default: \"TRUE\")\n    --maaslin_min_feature_prevalence_fraction Min sample fraction for feature presence (default: 0.05)\n    --maaslin_min_feature_abundance_sum Min total abundance for feature (non-binary) (default: 0)\n\n  Other Commands:\n    genecascade -h|--help         Show this help message and exit.\n    genecascade -v|--version      Show version information and exit."
  },
  {
    "objectID": "usage.html#quick-start",
    "href": "usage.html#quick-start",
    "title": "Usage",
    "section": "1 Quick start",
    "text": "1 Quick start\nTo quickly run StrainCascade on a sequencing file from the command line interface, use the following minimal command:\nstraincascade -i /path/to/your/input_file.bam\nNote: Running StrainCascade is resource-intensive and will overwhelm standard desktop or laptop computers. For optimal performance, we strongly recommend using a high-performance computing (HPC) environment.\nFor efficient execution, it’s recommended to submit the pipeline as a SLURM sbatch job. Below is an example of a basic SLURM submission script. Be sure to adjust the --partition parameter to match your environment:\n#!/bin/bash #SBATCH \n--job-name=\"StrainCascade\" \n#SBATCH --output=StrainCascade\\_%j.out \n#SBATCH --cpus-per-task=32 \n#SBATCH --mem=320G # 10GB per CPU for 32 CPUs \n#SBATCH --partition=your_partition\n\n# Execute the job\n\nstraincascade -i /path/to/your/input_file.bam\nTo submit the script to your SLURM scheduler, use:\nsbatch your_script.sh"
  },
  {
    "objectID": "license.html",
    "href": "license.html",
    "title": "StrainCascade software licenses",
    "section": "",
    "text": "1 Software license for GeneCascade\nMIT No Attribution License\n\nCopyright (c) 2024-2025, University of Bern, Department for BioMedical Research, Sebastian Bruno Ulrich JORDI\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n2 Software licenses for third-party tools used in StrainCascade\n\nDisclaimer: The information provided here is for general guidance only. We do not guarantee the correctness or completeness of the license details listed. The authors and maintainers of StrainCascade are not liable for any discrepancies or legal issues that may arise from using the software shipped with containers. Users are strongly encouraged to verify the licenses of the software tools themselves to ensure compliance with their intended use.\n\n\n\n2.0.1 Canu Assembly\n\nTool Name: Canu\nStrainCascade module: SC1 and SC4\nStrainCascade script: StrainCascade_Canu_correct_trim.sh and StrainCascade_Canu_assembly.sh\nLicense: GNU GPL v2, BSD-3-Clause, Public Domain Notice (for U.S. Government work), Pacific Biosciences License\nTool URL: Canu\nInformation added: October 03, 2024\nFull license text:\n\n\n\nClick to expand\n\nThis software constitutes a joint work and the contributions of individual\nauthors are subject to different licenses.  Contributions and licenses are\nlisted in the applicable source files, with specific details on each individual\ncontribution captured in the revision control system.\n\nThis software is based on RELEASE_1-3_2004-03-17 of the 'Celera Assembler'\n(http://wgs-assembler.sourceforge.net) as distributed by Applera Corporation\nunder the GNU General Public License, version 2.  Canu branched from Celera\nAssembler at revision 4587.\n\nThis software is based on the 'kmer package' (http://kmer.sourceforge.net) as\ndistributed by Applera Corporation under the GNU General Public License, version 2.\nCanu branched from the kmer project at revision 1994.\n\nThis software is based on 'pbutgcns' (https://github.com/pbjd/pbutgcns) and 'FALCON'\n(https://github.com/PacificBiosciences/FALCON) as released by Pacific Biosciences of\nCalifornia, Inc.\n\n\n\n\nFor the full software distribution and modifications made under the GNU General\nPublic License version 2:\n\n  This program is free software; you can redistribute it and/or modify it under\n  the terms of the GNU General Public License as published by the Free Software\n  Foundation; either version 2 of the License, or (at your option) any later\n  version.\n\n  This program is distributed in the hope that it will be useful, but WITHOUT\n  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n  FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n  details.\n\n  You should have received (README.license.GPL) a copy of the GNU General Public\n  License along with this program; if not, write to the Free Software\n  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n\n\n\nFor modifications made by the Battelle National Biodefense Institute\nunder the BSD 3-Clause License:\n\n  This Software was prepared for the Department of Homeland Security (DHS) by the\n  Battelle National Biodefense Institute, LLC (BNBI) as part of contract\n  HSHQDC-07-C-00020 to manage and operate the National Biodefense Analysis and\n  Countermeasures Center (NBACC), a Federally Funded Research and Development\n  Center.\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\n  * Neither the name of the Battelle National Biodefense Institute nor the names\n    of its contributors may be used to endorse or promote products derived from\n    this software without specific prior written permission.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n  OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n\nFor modifications in the public domain:\n\n  PUBLIC DOMAIN NOTICE\n\n  This software is \"United States Government Work\" under the terms of the United\n  States Copyright Act. It was written as part of the authors' official duties\n  for the United States Government and thus cannot be copyrighted. This software\n  is freely available to the public for use without a copyright\n  notice. Restrictions cannot be placed on its present or future use.\n\n  Although all reasonable efforts have been taken to ensure the accuracy and\n  reliability of the software and associated data, the National Human Genome\n  Research Institute (NHGRI), National Institutes of Health (NIH) and the\n  U.S. Government do not and cannot warrant the performance or results that may\n  be obtained by using this software or data. NHGRI, NIH and the U.S. Government\n  disclaim all warranties as to performance, merchantability or fitness for any\n  particular purpose.\n\n  Please cite the authors in any work or product based on this material.\n\n\n\nFor software released by Pacific Biosciences of California, Inc.:\n\n  Copyright (c) 2011-2015, Pacific Biosciences of California, Inc.\n\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted (subject to the limitations in the\n  disclaimer below) provided that the following conditions are met:\n\n   * Redistributions of source code must retain the above copyright notice, this\n     list of conditions and the following disclaimer.\n\n   * Redistributions in binary form must reproduce the above copyright notice,\n     this list of conditions and the following disclaimer in the documentation\n     and/or other materials provided with the distribution.\n\n   * Neither the name of Pacific Biosciences nor the names of its contributors\n     may be used to endorse or promote products derived from this software\n     without specific prior written permission.\n\n  NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY\n  THIS LICENSE. THIS SOFTWARE IS PROVIDED BY PACIFIC BIOSCIENCES AND ITS\n  CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL PACIFIC BIOSCIENCES OR\n  ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER\n  IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  POSSIBILITY OF SUCH DAMAGE.\n\n  README.license.GPL file from Canu's git repository:\n\n            GNU GENERAL PUBLIC LICENSE\n               Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n                       59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Library General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\f\n            GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\f\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\f\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\f\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n             END OF TERMS AND CONDITIONS\n\f\n        How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    &lt;one line to give the program's name and a brief idea of what it does.&gt;\n    Copyright (C) &lt;year&gt;  &lt;name of author&gt;\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  &lt;signature of Ty Coon&gt;, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Library General\nPublic License instead of this License.\n\n\n\n\n2.0.2 LJA Assembly\n\nMain tool: La Jolla Assembler\nStrainCascade module: SC2\nStrainCascade script: StrainCascade_LJA_assembly.sh\nLicense: BSD-3-Clause\nTool URL: LJA\nInformation added: August 18, 2024\nFull license text:\n\n\n\nClick to expand\n\n\nCopyright (c) 2016, The Regents of the University of California License: BSD-3-Clause\n\nProject code contributors:\n\n-   Mikhail Kolmogorov\n\n-   Jeffrey Yuan\n\n-   Yu Lin\n\n-   Evgeny Polevikov\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n-   Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n-   Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n-   Neither the name of the The Regents of the University of California nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \\&lt;COPYRIGHT HOLDER\\&gt; BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  {
    "objectID": "license.html#licenses",
    "href": "license.html#licenses",
    "title": "StrainCascade Software Licenses",
    "section": "2.1 Licenses",
    "text": "2.1 Licenses\n\n2.1.1 1. StrainCascade_LJA_assembly.sh\n\nTool Name: LJA\nLicense: License Name\nTool URL: LJA\nDate Added: YYYY-MM-DD\nFull License Text:\n\n\nClick to expand\n\n\n\n\n\n2.1.2 2. StrainCascade_SPAdes_assembly.sh\n\nTool Name: SPAdes\nLicense: License Name\nTool URL: SPAdes\nDate Added: YYYY-MM-DD\nFull License Text:\n\n\nClick to expand\n\n\n\n\n\n2.1.3 3. StrainCascade_Canu_assembly.sh\n\nTool Name: Canu\nLicense: License Name\nTool URL: Canu\nDate Added: YYYY-MM-DD\nFull License Text:\n\n\nClick to expand\n\n\n\n\n\n2.1.4 4. StrainCascade_Flye_assembly.sh\n\nTool Name: Flye\nLicense: License Name\nTool URL: Flye\nDate Added: YYYY-MM-DD\nFull License Text:\n\n\nClick to expand"
  },
  {
    "objectID": "installation.html#default-installation",
    "href": "installation.html#default-installation",
    "title": "Installation",
    "section": "3 Default installation",
    "text": "3 Default installation\nClone the StrainCascade GitHub repository\ngit clone https://github.com/SBUJordi/StrainCascade.git\nMove to the StrainCascade directory\ncd StrainCascade\nMake the StrainCascade scripts executable\nchmod +x scripts/*\nExecute the installation script (pulls Apptainer images and downloads databases)\n./scripts/StrainCascade_installation.sh\nYou will be prompted by an interactive installation guide if you have enough disk space.\nRunning StrainCascade installation...\nSufficient disk space available: XXXGB\nApptainer is installed.\nDo you want to do a full installation of StrainCascade? (y/n)\nFor a complete installation from scratch, choose y when asked:\ny\nThe installation process will take a while."
  },
  {
    "objectID": "installation.html#custom-installation-selective-apptainer-imagesdatabases",
    "href": "installation.html#custom-installation-selective-apptainer-imagesdatabases",
    "title": "Installation",
    "section": "5 Custom Installation (selective Apptainer images/databases)",
    "text": "5 Custom Installation (selective Apptainer images/databases)\nIn the event of an error, disruption, or if you prefer to install only specific Apptainer images or databases, you can choose n when prompted for a full installation. This will allow you to sequentially decide for each individual Apptainer image or database whether you want to download and install it.\nThis option is particularly useful in scenarios where:\n\nYou have limited disk space or bandwidth and need to prioritize specific components.\nYou encountered an error during a previous installation attempt and need to retry specific parts of the installation.\nYou are troubleshooting and want to isolate certain components for testing.\n\nWhen opting for a selective installation, the script will guide you through each component, providing a brief description and asking whether you wish to install it. This process ensures that only the necessary components are downloaded, giving you full control over the installation.\nExample Prompt:\nDo you want to install checkm2_db? (y/n)\nBy answering y or n to each prompt, you can customise the installation to your specific needs."
  },
  {
    "objectID": "usage.html#quick-start-from-sequencing-files",
    "href": "usage.html#quick-start-from-sequencing-files",
    "title": "Usage",
    "section": "1 Quick start (from sequencing files)",
    "text": "1 Quick start (from sequencing files)\nTo quickly run StrainCascade on a sequencing file from the command line interface, use the following minimal command:\nstraincascade -i /path/to/your/input_file\nNote: Running StrainCascade is resource-intensive and will overwhelm standard desktop or laptop computers. For optimal performance, we strongly recommend using a high-performance computing (HPC) environment.\nFor efficient execution, it’s recommended to submit pipeline jobs as a SLURM SBATCH job. Below is an example of a basic SLURM submission script. Be sure to adjust the --partition parameter to match your environment:\n#!/bin/bash \n#SBATCH --job-name=\"StrainCascade\" \n#SBATCH --output=StrainCascade\\_%j.out \n#SBATCH --cpus-per-task=32 \n#SBATCH --mem-per-cpu=3G #96GB total \n#SBATCH --partition=your_partition\n\n# Execute the job\n\nstraincascade -i /path/to/your/input_file -t 32\nTo submit the script to your SLURM scheduler, use:\nsbatch your_SBATCH_script.sh"
  },
  {
    "objectID": "usage.html#quick-start-from-assembly-files",
    "href": "usage.html#quick-start-from-assembly-files",
    "title": "Usage",
    "section": "2 Quick start (from assembly files)",
    "text": "2 Quick start (from assembly files)\nTo quickly run StrainCascade on an already assembled genome from the command line interface, use the following minimal command:\nstraincascade -a /path/to/your/input_file\nNote: Running StrainCascade is resource-intensive and will overwhelm standard desktop or laptop computers. For optimal performance, we strongly recommend using a high-performance computing (HPC) environment.\nFor efficient execution, it’s recommended to submit pipeline jobs as a SLURM SBATCH job. Below is an example of a basic SLURM submission script. Be sure to adjust the --partition parameter to match your environment:\n#!/bin/bash \n#SBATCH --job-name=\"StrainCascade\" \n#SBATCH --output=StrainCascade\\_%j.out \n#SBATCH --cpus-per-task=32 \n#SBATCH --mem-per-cpu=3G #96GB total \n#SBATCH --partition=your_partition\n\n# Execute the job\n\nstraincascade -a /path/to/your/input_file -t 32\nTo submit the script to your SLURM scheduler, use:\nsbatch your_SBATCH_script.sh"
  },
  {
    "objectID": "usage.html#high-throughput-sbatch-set-up-from-sequencing-files",
    "href": "usage.html#high-throughput-sbatch-set-up-from-sequencing-files",
    "title": "Usage",
    "section": "3 High throughput SBATCH set-up (from sequencing files)",
    "text": "3 High throughput SBATCH set-up (from sequencing files)\nFor processing multiple sequencing files in a high-throughput manner, you can use a provided submission script that automates the creation of individual SLURM jobs for each input file contained in a specified input directory. Here’s an example of how to set this up:\nFirst, navigate to the StrainCascade installation directory:\ncd $(dirname $(which straincascade))/..\nThen you can generate batch submissions for multiple files as illustrated exemplarily below:\n# For minimal usage with required arguments only\n./scripts/SBATCH_scripts/StrainCascade_high_throughput_SBATCH_sequencing_files.sh -i /path/to/input_directory -p my_partition\n\n# With sequencing type\n./scripts/SBATCH_scripts/StrainCascade_high_throughput_SBATCH_sequencing_files.sh -i /path/to/input_directory -p my_partition -s pacbio-raw\n\n# With all optional parameters\n./scripts/SBATCH_scripts/StrainCascade_high_throughput_SBATCH_sequencing_files.sh -i /path/to/input_directory -p my_partition -s pacbio-raw -n user@example.com -f file_list.txt\n\n# Parameters can be in any order\n./scripts/SBATCH_scripts/StrainCascade_high_throughput_SBATCH_sequencing_files.sh -s pacbio-hifi -i /path/to/input_directory -n user@example.com -p my_partition\nFurther explanation:\n./scripts/SBATCH_scripts/StrainCascade_high_throughput_SBATCH_sequencing_files.sh\nUsage: ./scripts/SBATCH_scripts/StrainCascade_high_throughput_SBATCH_sequencing_files.sh -i &lt;input_directory&gt; -p &lt;partition&gt; [-s &lt;sequencing_type&gt;] [-n &lt;notification&gt;] [-f &lt;file_list&gt;]\nRequired arguments:\n  -i &lt;input_directory&gt;: Directory containing input files\n  -p &lt;partition&gt;: SLURM partition to use for the job\nOptional arguments:\n  -s &lt;sequencing_type&gt;: Sequencing type (default: pacbio-hifi)\n                        Valid options: pacbio-raw, pacbio-corr, pacbio-hifi, nano-raw, nano-corr, nano-hq\n  -n &lt;notification&gt;: Email address for notifications\n  -f &lt;file_list&gt;: File with specific filenames to process (one filename per line)\n  -----------------------------------------------------------------\n  Example usage 1: ./scripts/SBATCH_scripts/StrainCascade_high_throughput_SBATCH_sequencing_files.sh -i /path/to/input/directory -p your_partition -s pacbio-raw\n  Example usage 2: ./scripts/SBATCH_scripts/StrainCascade_high_throughput_SBATCH_sequencing_files.sh -i /path/to/input/directory -p your_partition -s pacbio-hifi -n your.email@example.com -f file_list.txt\n\nBy default the script will generate a submission script for each file in the input directory with one of the following endings: .bam, fastq, fastq.gz, .fasta, fna or .fa. The files will be submitted to the SLURM scheduler. Optionally, you can provide a text file (file_list) limiting execution to specific files in the input directory.\nBy default the script will execute a standard run of StainCascade for each of the samples as SBATCH job: straincascade -a \"$input_file\" -r main -t 32 (using 96GB of RAM). If you are experienced with StrainCascade and using SBATCH and want to customize the execution, you can modify the script to your needs.\nThe script will submit the individual SLURM jobs with job configurations as shown below. Make sure that these are appropriate for your system (e.g., number of CPUs, memory allocation, time limits etc.).\n#!/bin/bash\n#--job-name=straincascade_${base_name}\n#--output=${REPORT_DIR}/StrainCascade_${base_name}_%j.out\n#--cpus-per-task=32\n#--mem-per-cpu=3G\n#--time=48:00:00\n#--partition=$PARTITION\n#--mail-user=$EMAIL\n#--mail-type=end,fail"
  },
  {
    "objectID": "usage.html#high-throughput-sbatch-set-up-from-assembly-files",
    "href": "usage.html#high-throughput-sbatch-set-up-from-assembly-files",
    "title": "Usage",
    "section": "4 High throughput SBATCH set-up (from assembly files)",
    "text": "4 High throughput SBATCH set-up (from assembly files)\nFor processing multiple already assembled genomes in a high-throughput manner, you can use a provided submission script that automates the creation of individual SLURM jobs for each input file contained in a specified input directory. Here’s an example of how to set this up:\nFirst, navigate to the StrainCascade installation directory:\ncd $(dirname $(which straincascade))/..\nThen you can generate batch submissions for multiple files as illustrated exemplarily below:\n# For minimal usage with required arguments only\n./scripts/SBATCH_scripts/StrainCascade_high_throughput_SBATCH_assembly_files.sh -i /path/to/input_directory -p my_partition\n\n# With sequencing type\n./scripts/SBATCH_scripts/StrainCascade_high_throughput_SBATCH_assembly_files.sh -i /path/to/input_directory -p my_partition -s pacbio-raw\n\n# With all optional parameters\n./scripts/SBATCH_scripts/StrainCascade_high_throughput_SBATCH_assembly_files.sh -i /path/to/input_directory -p my_partition -s pacbio-raw -n user@example.com -f file_list.txt\n\n# Parameters can be in any order\n./scripts/SBATCH_scripts/StrainCascade_high_throughput_SBATCH_assembly_files.sh -s pacbio-hifi -i /path/to/input_directory -n user@example.com -p my_partition\nFurther explanation:\nUsage: ./scripts/SBATCH_scripts/StrainCascade_high_throughput_SBATCH_sequencing_files.sh -i &lt;input_directory&gt; -p &lt;partition&gt; [-s &lt;sequencing_type&gt;] [-n &lt;notification&gt;] [-f &lt;file_list&gt;] [-c &lt;cpus&gt;] [-m &lt;memory&gt;]\nRequired arguments:\n  -i &lt;input_directory&gt;: Directory containing input files\n  -p &lt;partition&gt;: SLURM partition to use for the job\nOptional arguments:\n  -s &lt;sequencing_type&gt;: Sequencing type (default: pacbio-hifi)\n                        Valid options: pacbio-raw, pacbio-corr, pacbio-hifi, nano-raw, nano-corr, nano-hq\n  -n &lt;notification&gt;: Email address for notifications\n  -f &lt;file_list&gt;: File with specific filenames to process (one filename per line)\n  -c &lt;cpus&gt;: Number of CPUs per task (default: 32)\n  -m &lt;memory&gt;: Memory per CPU in GB (default: 3)\n  -----------------------------------------------------------------\n  Example usage 1: ./scripts/SBATCH_scripts/StrainCascade_high_throughput_SBATCH_sequencing_files.sh -i /path/to/input/directory -p your_partition -s pacbio-raw\n  Example usage 2: ./scripts/SBATCH_scripts/StrainCascade_high_throughput_SBATCH_sequencing_files.sh -i /path/to/input/directory -p your_partition -s pacbio-hifi -n your.email@example.com -f file_list.txt -c 10 -m 5\n\nBy default the script will generate a submission script for each file in the input directory with one of the following endings: .fasta, fna or .fa. The files will be submitted to the SLURM scheduler. Optionally, you can provide a text file (file_list) limiting execution to specific files in the input directory.\nBy default the script will execute a standard run of StainCascade for each of the samples as SBATCH job: straincascade -a \"$input_file\" -r main -t 32 (using 96GB of RAM). If you are experienced with StrainCascade and using SBATCH and want to customize the execution, you can modify the script to your needs.\nThe script will submit the individual SLURM jobs with job configurations as shown below. Make sure that these are appropriate for your system (e.g., number of CPUs, memory allocation, time limits etc.).\n#!/bin/bash\n#--job-name=straincascade_${base_name}\n#--output=${REPORT_DIR}/StrainCascade_${base_name}_%j.out\n#--cpus-per-task=32\n#--mem-per-cpu=3G\n#--time=48:00:00\n#--partition=$PARTITION\n#--mail-user=$EMAIL\n#--mail-type=end,fail"
  },
  {
    "objectID": "installation.html#default-installation-interactive",
    "href": "installation.html#default-installation-interactive",
    "title": "Installation",
    "section": "3 Default installation (interactive)",
    "text": "3 Default installation (interactive)\nFor a standard installation using the interactive command-line utility, follow these steps:\nOptional - Create and activate a conda environment for GeneCascade:\nconda create -n GeneCascade_env\nconda activate GeneCascade_env\nOptional - Navigate to your GeneCascade conda environment directory (if you want to clone the repository there):\ncd $CONDA_PREFIX\nClone the GeneCascade GitHub repository to your current working directory:\n# Replace with the actual GeneCascade repository URL if different\ngit clone https://github.com/SBUJordi/GeneCascade.git\nNavigate to the new GeneCascade directory:\ncd GeneCascade\nMake the main installation script executable:\nchmod +x genecascade_installation.sh\nExecute the installation script. This will launch an interactive menu to guide you through the installation options:\n./genecascade_installation.sh\nYou will be presented with a menu similar to this:\nYYYY-MM-DD HH:MM:SS - INSTALL: GeneCascade Installation Utility\nYYYY-MM-DD HH:MM:SS - INSTALL: --------------------------------\nYYYY-MM-DD HH:MM:SS - INSTALL: This script will guide you through setting up GeneCascade.\nYYYY-MM-DD HH:MM:SS - INSTALL: Default Apptainer Image Directory: /path/to/GeneCascade/apptainer_images\nYYYY-MM-DD HH:MM:SS - INSTALL: Default Database Directory:        /path/to/GeneCascade/databases\nYYYY-MM-DD HH:MM:SS - INSTALL: Ensure you have sufficient disk space (~475GB for all databases) and a stable internet connection.\n\nSelect an installation option: \n1) Full Installation (Apptainer Image + All Databases + Add to PATH)\n2) Install/Update Apptainer Image Only\n3) Install/Update All Databases Only\n4) Add GeneCascade Scripts to PATH\n5) Check System Requirements (Apptainer, Disk Space)\n6) Quit Installation\nThe default Apptainer image directory will be GeneCascade/apptainer_images and the default database directory will be GeneCascade/databases relative to where you cloned the repository.\nFor a complete installation from scratch, choose option 1 (“Full Installation”). The installation duration will depend on your system and network speed."
  },
  {
    "objectID": "installation.html#default-installation-sbatch",
    "href": "installation.html#default-installation-sbatch",
    "title": "Installation",
    "section": "4 Default installation (SBATCH)",
    "text": "4 Default installation (SBATCH)\nIf you are using an institutional HPC (High-Performance Computing) account with SLURM (Simple Linux Utility for Resource Management), you can install StrainCascade using SBATCH. Follow these steps:\nOptional - Create and activate a conda environment for StrainCascade:\nconda create -n StrainCascade_env\nconda activate StrainCascade_env\nOptional - Navigate to your StrainCascade conda environment directory:\ncd $CONDA_PREFIX\nClone the StrainCascade GitHub repository to your current working directory\ngit clone https://github.com/SBUJordi/StrainCascade.git\nNavigate to the new StrainCascade directory\ncd StrainCascade\nMake all scripts (including the ones in subdirectories) of StrainCascade executable\nfind scripts/ -type f -exec chmod +x {} \\;\nExecute the SBATCH installation script, which pulls Apptainer images and downloads databases.\n./scripts/SBATCH_scripts/StrainCascade_SBATCH_full_installation.sh your_partition your.email@example.com\nReplace your_partition with your HPC’s SLURM partition name and your.email@example.com with your email address for job notifications.\nThe installation will be handled by SLURM and may take between 12 hours to over a day, depending on your system and network speed. You will receive an email notification when the installation is complete or if it fails."
  },
  {
    "objectID": "installation.html#updating-existing-straingcascade-software-instllation",
    "href": "installation.html#updating-existing-straingcascade-software-instllation",
    "title": "Installation",
    "section": "6 Updating existing StraingCascade software instllation",
    "text": "6 Updating existing StraingCascade software instllation\nIf you have StrainCascade already installed but would like to update the software (scripts) without reinstalling Apptainer images or databeses, you can choose n when prompted for a full installation. You will then be prompted if you want to update the StrainCascade software: Do you want to update the StrainCascade software (scripts)? (y/n). If you choose y all current StrainCascade scripts will be updated.\nThis option is particularly useful in scenarios where:\n\nThere are improvements or bug fixes in the current release of StrainCascade software available that you want to use.\n\nNote: This will not replace the necessity of re-installment after new major version releases of StrainCase with new features, Apptainer images or databases."
  },
  {
    "objectID": "installation.html#caveats",
    "href": "installation.html#caveats",
    "title": "Installation",
    "section": "5 CAVEATS",
    "text": "5 CAVEATS\n\nPATH configuration: The installation script (Option 4 or as part of Full Installation) attempts to modify your shell configuration files (e.g., .bashrc, .zshrc, .bash_profile, .profile) to add the GeneCascade/scripts directory to your PATH. If it cannot find a common profile or if the directory is already in the PATH, it will inform you. It also adds the path to the current session. Ensure you open a new terminal session or source your shell profile after installation/update for PATH changes to take permanent effect.\nInstallation of third-party databases: GeneCascade downloads and installs UniProtKB/Swiss-Prot, UniProtKB/TrEMBL, and GTDB using mmseqs databases via the Apptainer image.\n\nThe script checks for sufficient disk space in the target database directory (GeneCascade/databases) before starting downloads.\nIf a database appears to exist, you’ll be prompted whether to re-download/update.\nIssues during download (network, server-side, local constraints) can occur. If a database download fails, the script will log an error but continue to attempt other database installations. You can retry failed database installations using Option 3 from the menu.\nTemporary download directories (GeneCascade/databases/tmp_mmseqs_download_*) are created and should be cleaned up automatically.\n\nManaging Apptainer images after updates: When updating the Apptainer image (Option 2), if an image file (genecascade_mmseqs2_r_latest.sif in GeneCascade/apptainer_images) already exists, you will be prompted to overwrite. The script primarily manages one standard image name. If you manually pull images with different names or versions, you might need to manage them manually to save disk space. GeneCascade’s database installation utilities will try to find the SIF image first by the standard name (genecascade_mmseqs2_r_latest.sif) and then by a pattern (genecascade_mmseqs2_r*.sif) within the GeneCascade/apptainer_images directory."
  },
  {
    "objectID": "installation.html#custom-installation",
    "href": "installation.html#custom-installation",
    "title": "Installation",
    "section": "4 Custom installation",
    "text": "4 Custom installation\nIn the event of an error, disruption, or if you prefer to install only specific Apptainer images or databases, you can choose n when prompted for a full installation. This will allow you to sequentially decide for each individual Apptainer image or database whether you want to download and install it.\nThis option is particularly useful in scenarios where:\n\nYou have limited disk space or bandwidth and need to prioritize specific components.\nYou encountered an error during a previous installation attempt and need to retry specific parts of the installation.\nYou are troubleshooting and want to isolate certain components for testing.\n\nWhen opting for a selective installation, the script will guide you through each component, providing a brief description and asking whether you wish to install it. This process ensures that only the necessary components are downloaded, giving you full control over the installation.\nExample Prompt:\nDo you want to install checkm2_db? (y/n)\nBy answering y or n to each prompt, you can customise the installation to your specific needs."
  },
  {
    "objectID": "usage.html#updating-straincascade",
    "href": "usage.html#updating-straincascade",
    "title": "Usage",
    "section": "5 Updating StrainCascade",
    "text": "5 Updating StrainCascade\nTo keep your StrainCascade installation current, you can freshly install new major releases or update existing components. For instructions on installing new releases and updating StrainCascade components, please refer to [Updating your existing StrainCascade installation]."
  },
  {
    "objectID": "usage.html#caveats",
    "href": "usage.html#caveats",
    "title": "Usage",
    "section": "6 CAVEATS",
    "text": "6 CAVEATS\n\nConda environment and PATH variable in SBATCH jobs: When submitting sbatch jobs, it is important to note that your Conda environment will not remain active. If you have multiple installations of StrainCascade, each installation will add its respective paths to the PATH variable. Only by activating the correct Conda environment in your sbatch script (not implement in above examples) will you ensure that the appropriate paths are used, allowing StrainCascade to function as expected. Without this activation, sbatch jobs may inadvertently use incorrect paths, potentially leading to errors or unexpected behaviour."
  },
  {
    "objectID": "installation.html#updating-your-existing-straincascade-installation",
    "href": "installation.html#updating-your-existing-straincascade-installation",
    "title": "Installation",
    "section": "5 Updating your existing StrainCascade installation",
    "text": "5 Updating your existing StrainCascade installation\nStrainCascade provides separate update mechanisms for its three main components: software scripts, Apptainer images, and databases. You can update each component independently using specific command-line flags with the straincascade command.\nTo update the software scripts, use:\nstraincascade -us\nTo update the Apptainer images, use:\nstraincascade -uai\nTo update the databases, use:\nstraincascade -udb\nThese update options are particularly useful when you want to incorporate improvements, bug fixes, or new releases specific to each component without performing a complete reinstallation. For example, you might want to update just the databases when new reference data becomes available, or update the software scripts to access the latest features while keeping your existing images and databases.\nImportant Note: These individual update mechanisms are designed for minor version updates and patches. They do not replace the need for a complete reinstallation when major version releases introduce significant new features that affect multiple components of StrainCascade. In such cases, please refer to the full installation instructions for your specific version."
  },
  {
    "objectID": "usage.html#main-commands",
    "href": "usage.html#main-commands",
    "title": "Usage",
    "section": "1 Main Commands",
    "text": "1 Main Commands\nThe genecascade script is the main entry point and accepts the following primary commands:\n\nrun: Executes the full GeneCascade analysis pipeline with specified modules and parameters.\ninstall: Launches the GeneCascade installation utility to install/update the Apptainer image and required databases.\n-h or --help: Displays the help message.\n-v or --version: Shows the current version of GeneCascade."
  },
  {
    "objectID": "usage.html#genecascade-run",
    "href": "usage.html#genecascade-run",
    "title": "Usage",
    "section": "2 genecascade run",
    "text": "2 genecascade run\nThis command executes the main analysis pipeline.\ngenecascade run [OPTIONS]\n\n2.1 Required Arguments for run\n\n-i, --input_sequences &lt;path&gt;\n\nPath to your input sequence data. This can be a single FASTA file, a directory of FASTA files, or a CSV/TSV/QS/RData file mapping sequence IDs to file paths.\n\n-o, --output_dir_base &lt;path&gt;\n\nBase directory where all output subdirectories and files for this run will be created.\n\n\n\n\n2.2 Optional Core Input/Output & Context Parameters for run\n\n-m, --metadata_file &lt;path&gt;\n\nPath to a metadata file (TSV or QS format). If not provided, GeneCascade will attempt to generate basic metadata from sequence IDs during Module 1 (Input Preparation). This may limit some downstream analyses.\n\n--genome_id_column &lt;column_name&gt;\n\nSpecifies the column in your metadata file that contains genome or Metagenome-Assembled Genome (MAG) identifiers. Primarily used in Module 6 (Co-occurrence Analysis) for context.\n\n--sample_id_column &lt;column_name&gt;\n\nSpecifies the column in your metadata file that contains sample identifiers. Used in Module 5 (Core Feature Analysis) and Module 6 (Co-occurrence Analysis) for context.\n\n--condition_column &lt;column_name&gt;\n\nSpecifies the column in your metadata file that contains condition or niche identifiers. Used in Module 5 (Core Feature Analysis) and Module 6 (Co-occurrence Analysis) for context.\n\n--fdr_threshold &lt;float&gt;\n\nGlobal False Discovery Rate (FDR) threshold for statistical tests.\nDefault: 0.05\n\n--apptainer_images_dir &lt;path&gt;\n\nPath to the directory containing GeneCascade Apptainer images (.sif files).\nDefault: GeneCascade_root/apptainer_images (relative to the main GeneCascade script location).\n\n--databases_directory &lt;path&gt;\n\nPath to the directory containing downloaded reference databases.\nDefault: GeneCascade_root/databases (relative to the main GeneCascade script location).\n\n-f, --force_overwrite\n\nIf set, forces the overwrite of existing output subdirectories for modules that are actively being run. Use with caution.\n\n\n\n\n2.3 Optional Performance Parameters for run\n\n-t, --threads &lt;integer&gt;\n\nNumber of threads to use for computationally intensive tasks.\nDefault: 16\n\n--memory &lt;value&gt;\n\nMemory limit for MMseqs2 (e.g., “10G”, “0” for unlimited).\nDefault: \"0\" (unlimited)\n\n--future_globals_max_size_gb &lt;integer&gt;\n\nMaximum size (in GB) for R ‘future’ globals, affecting parallel processing in R scripts.\nDefault: 5\n\n\n\n\n2.4 Optional Skip Flags for run\nYou can skip specific modules of the pipeline:\n\n--skip_GC_01_preparation: Skip Module 1 (Input Preparation).\n--skip_GC_02_annotation: Skip Module 2 (Sequence Annotation).\n--skip_GC_03_clustering: Skip Module 3 (Homology Clustering).\n--skip_GC_04_master_table: Skip Module 4 (Master Table Generation).\n--skip_GC_05_core_features: Skip Module 5 (Core Feature Analysis).\n--skip_GC_06_cooccurrence: Skip Module 6 (Co-occurrence Analysis).\n--skip_GC_07_association: Skip Module 7 (Association Studies).\n\n\n\n2.5 Optional General Abundance Parameters for run\nThese parameters define how feature abundance is interpreted, particularly for Modules 6 and 7.\n\n--abundance_type &lt;type&gt;\n\nType of feature abundance:\n\nbinary: Presence/absence.\nrelative_abundance: Normalized abundance values.\nabsolute_abundance: Raw count or absolute abundance values.\n\nDefault: \"binary\"\n\n--abundance_column &lt;column_name&gt;\n\nIf --abundance_type is relative_abundance or absolute_abundance, this specifies the column in your metadata file that contains the abundance values. Ignored if binary.\n\n\n\n\n2.6 Optional Parameters for GC 1 (Sequence Preparation) for run\n\n--sequence_type &lt;type&gt;\n\nInitial guess for the input sequence type: protein or nucleotide.\nDefault: Auto-detected by Module 1.\n\n\n\n\n2.7 Optional Parameters for GC 2 (Annotation) for run\n\n--annotation_db_priority &lt;databases&gt;\n\nComma-separated list defining the priority of annotation databases (e.g., “Swiss-Prot,TrEMBL”).\nDefault: \"Swiss-Prot_TrEMBL\" (Note: the script uses _ as a separator in the default, but the help suggests , for user input. This might need clarification in the script’s help or parsing.)\n\n-s, --sensitivity &lt;float&gt;\n\nSensitivity parameter for MMseqs2, used in Module 2 (Annotation) and Module 3 (Clustering).\nDefault: 5.7\n\n\n\n\n2.8 Optional Parameters for GC 3 (Clustering) for run\n\n--min_sequence_identity &lt;float&gt;\n\nMinimum sequence identity for clustering (passed to MMseqs2 --min-seq-id).\nDefault: 0.5\n\n--min_coverage &lt;float&gt;\n\nMinimum coverage for clustering (passed to MMseqs2 -c or --min-cov).\nDefault: 0.8\n\n--coverage_mode &lt;integer&gt;\n\nCoverage mode for clustering (passed to MMseqs2 --cov-mode).\nDefault: 0\n\n\n\n\n2.9 Optional Parameters for GC 4 (Master Table Generation) for run\n\n--master_table_basename &lt;name&gt;\n\nBasename for the main output data table file (e.g., master_data_table.qs).\nDefault: \"master_data_table\"\n\n\n\n\n2.10 Optional Parameters for GC 5 (Core Feature Analysis) for run\n\n--core_feature_prevalence_threshold &lt;float&gt;\n\nPrevalence threshold (0.0-1.0) for defining core features within a condition/niche.\nDefault: 0.9\n\n\n\n\n2.11 Optional Parameters for GC 6 (Co-occurrence Analysis) for run\n(Context for GC 6 is set by --genome_id_column, --sample_id_column, --condition_column listed under Core Parameters)\nHomologue Group (HG) Filters & Pairwise Tests:\n\n--cooc_correlation_method &lt;method&gt;\n\nCorrelation method for abundance data: spearman or pearson.\nDefault: \"spearman\"\n\n--min_hg_occurrence_absolute &lt;integer&gt;\n\nMinimum absolute number of genomes/samples an HG must be present in.\nDefault: 10\n\n--min_hg_occurrence_fraction &lt;float&gt;\n\nMinimum fraction (0.0-1.0) of genomes/samples an HG must be present in.\nDefault: 0.01\n\n--max_hg_prevalence_percentage &lt;float&gt;\n\nMaximum prevalence percentage (0-100) for an HG to be included.\nDefault: 99.0\n\n--min_pair_cooccurrence_absolute &lt;integer&gt;\n\nMinimum absolute number of genomes/samples a pair of HGs must co-occur in.\nDefault: 5\n\n--min_pair_cooccurrence_fraction &lt;float&gt;\n\nMinimum fraction (0.0-1.0) of genomes/samples a pair of HGs must co-occur in.\nDefault: 0.005\n\n--min_hg_iqr_abundance &lt;float&gt;\n\nMinimum Interquartile Range (IQR) for HG abundance values (for non-binary abundance types).\nDefault: 0.0\n\n--min_correlation_metric &lt;float&gt;\n\nMinimum absolute pairwise correlation metric to consider a link.\nDefault: 0.0\n\n--pairwise_test_chunk_size &lt;integer&gt;\n\nChunk size for processing pairs in R helper scripts, managing memory.\nDefault: 1000000\n\n\nModule Definition:\n\n--min_positive_module_correlation &lt;float&gt;\n\nMinimum positive correlation value for defining links within a co-occurrence module.\nDefault: 0.3\n\n--min_module_size &lt;integer&gt;\n\nMinimum number of HGs required to form a module.\nDefault: 3\n\n--community_detection_method &lt;method&gt;\n\nAlgorithm for community detection (e.g., cluster_louvain from igraph).\nDefault: \"cluster_louvain\"\n\n--core_module_strong_link_threshold &lt;float&gt;\n\nCorrelation metric threshold for defining “strong links” within core modules.\nDefault: 0.7\n\n\nCompetitive Module/Pathway Analysis:\n\n--inter_module_neg_metric_threshold &lt;float&gt; (was --inter_pathway_neg_metric_threshold)\n\nNegative correlation metric threshold for identifying potential competition between modules.\nDefault: -0.2\n\n--inter_module_min_neg_links &lt;integer&gt; (was --inter_pathway_min_neg_links)\n\nMinimum number of negative links between two modules to consider them potentially competitive.\nDefault: 1\n\n--vs_core_neg_metric_threshold &lt;float&gt;\n\nNegative correlation metric threshold for competition between a module and core HGs.\nDefault: -0.3\n\n--vs_core_min_frac_members &lt;float&gt;\n\nMinimum fraction of a module’s members that must show negative correlation with core HGs.\nDefault: 0.25\n\n--vs_core_min_distinct_core_hgs &lt;integer&gt;\n\nMinimum number of distinct core HGs a module must show competition with.\nDefault: 1\n\n\n\n\n2.12 Optional Parameters for GC 7 (Association Studies - MaAsLin3) for run\n\n--maaslin_fixed_effects &lt;effects&gt;\n\nComma-separated list of metadata column names to be used as fixed effects in MaAsLin3. Required if Module 7 is active.\n\n--maaslin_random_effects &lt;effects&gt;\n\nComma-separated list of metadata column names for random effects.\n\n--maaslin_reference_levels &lt;levels&gt;\n\nSemicolon-separated string defining reference levels for categorical variables in MaAsLin3 (e.g., “variable1,ref_level1;variable2,ref_level2”).\n\n--maaslin_observation_unit_column &lt;column_name&gt;\n\nMetadata column name representing the primary observation unit (e.g., sample IDs). Required if Module 7 is active.\n\n--maaslin_genome_id_column &lt;column_name&gt;\n\nOptional metadata column for genome IDs, can be used e.g., as a random effect if relevant.\n\n--maaslin_analysis_target &lt;target&gt;\n\nFeature type for MaAsLin3 analysis: homologues, pathways, or both.\nDefault: \"homologues\"\n\n--maaslin_normalization &lt;method&gt;\n\nNormalization method for MaAsLin3.\nDefault: \"TSS\" (Total Sum Scaling) for quantitative data, \"NONE\" for binary.\n\n--maaslin_transform &lt;method&gt;\n\nData transformation for MaAsLin3.\nDefault: \"LOG\" for quantitative data, \"NONE\" for binary.\n\n--maaslin_standardize &lt;TRUE_FALSE&gt;\n\nWhether to standardize continuous metadata variables (TRUE or FALSE).\nDefault: \"TRUE\"\n\n--maaslin_min_feature_prevalence_fraction &lt;float&gt;\n\nMinimum fraction of samples in which a feature must be present to be included in MaAsLin3 analysis.\nDefault: 0.05\n\n--maaslin_min_feature_abundance_sum &lt;float&gt;\n\nMinimum total abundance sum for a feature across all samples (for non-binary data).\nDefault: 0 (for quantitative data, effectively no sum filter unless changed)"
  },
  {
    "objectID": "usage.html#genecascade-install",
    "href": "usage.html#genecascade-install",
    "title": "Usage",
    "section": "3 genecascade install",
    "text": "3 genecascade install\nThis command launches the interactive installation utility.\ngenecascade install\nThis will present a menu to: - Perform a full installation (Apptainer image + All Databases + Add to PATH). - Install/Update the Apptainer image only. - Install/Update all databases only. - Add GeneCascade scripts to your system PATH. - Check system requirements (Apptainer, Disk Space).\nRefer to the Installation page for more details."
  },
  {
    "objectID": "usage.html#help-and-version",
    "href": "usage.html#help-and-version",
    "title": "Usage",
    "section": "4 Help and Version",
    "text": "4 Help and Version\n\ngenecascade -h or genecascade --help\n\nDisplays the detailed help message listing all commands and options.\n\ngenecascade -v or genecascade --version\n\nShows the installed GeneCascade version."
  },
  {
    "objectID": "installation.html#updating-your-existing-genecascade-installation",
    "href": "installation.html#updating-your-existing-genecascade-installation",
    "title": "Installation",
    "section": "4 Updating your existing GeneCascade installation",
    "text": "4 Updating your existing GeneCascade installation\nGeneCascade’s installation script facilitates updates:\n\nSoftware Scripts (GeneCascade code): To update the GeneCascade scripts themselves, navigate to your GeneCascade directory and use git pull to get the latest changes from the repository. bash     cd path/to/GeneCascade # Your GeneCascade installation directory     git pull After pulling changes, you might need to re-run ./genecascade_installation.sh if the update involves changes to dependencies, PATH setup, or if new database/image versions are recommended.\nApptainer Image: Use option 2 (“Install/Update Apptainer Image Only”) from the ./genecascade_installation.sh menu. This will pull the sbujordi/genecascade_mmseqs2_r:latest image.\nDatabases: Use option 3 (“Install/Update All Databases Only”) from the ./genecascade_installation.sh menu. This will attempt to download/update UniProtKB/Swiss-Prot, UniProtKB/TrEMBL, and GTDB.\n\nImportant Note: For major version releases of GeneCascade that introduce significant changes, a full re-evaluation of the installation process or following specific release notes might be necessary."
  }
]